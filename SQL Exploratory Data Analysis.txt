SQL Exploratory Data Analysis (EDA) Project 


1.DATABASE EXPLORATION

    -Explore all objects in the database-

 select * from information_schema.tables

    -Excplore all columns in the database

select * from information_schema.columns
where table_name= 'dim_customers'

2. DIMENSIOS EXPLORATION -identify the unique values(categories) in each dimension.
                         -recognizing how data might be grouped or segmented, which is useful for later

[DISTINCT]DIMENSION      distinct country, disctinct category, distinct product

ex explore all countries our customers come from

SELECT DISTINCT country from customers

ex explore all categories 

SELECT DISTINCT category, subcategory, product_name from product
order by 1,2,3

3. DATE EXPLORATION - identify the earliest and lates dates (boundries)
                    - understand the scope of data and the timespan
                    - min/max [date DIMENSION]

ex Find the date of the first and the last order
HOW many years of sales are available

SELECT 
min(order_date)as first_order_date ,
max(order_date) as last_order_date,
datediff(year,min(order_date), max(order_date)) as order_range_months
from sales

ex. Find the youngest and the oldest customer

select min(birthdate) as oldest_birtgdate,
max(birthdate),
datediff(year, min(birthdate),getdate()) as oldest_birthdate
datediff(year, max(birthdate),getdate()) as youngest_birthdate
from customers

4. MEASURE EXPLORATION  - calculate the key metrics of the business
                        - Highest level of aggregation / lowest level of details-
                        - sum(measure)
                        - sum(sales), avg (price), sum(quantity)

ex find total sales

SELECT sum(sales_amount) as total_sales from sales

ex how many items are sold

select sum(quantity) as total_quantity from sales

ex find avg selling price

select avg(price) as avg_price from sales

ex find total numbers of orders 

select count(order_number) as total_orders from sales
select count(distinct order_number) as total_orders from sales
select * from sales

ex find total nb of products

select count(distinct product_key) as total_products from product

ex find total number of customers

select count(customer_key) as total_customers from customers

ex find the total number of customers that has placed an order

select count(distinct customer_key) as total_customers from sales

GENERATE REPORT THAT SHOWS ALL KEY METRICS OF THE BUSINESS


SELECT 'TOTAL SALE' AS MEASURE_NAME, sum(sales_amount) as MEASURE_VALUE from sales
UNION ALL
SELECT 'TOTAL QUANTITY' AS MEASURE_NAME, sum(QUANTITY) as MEASURE_VALUE from sales
UNION ALL
select 'AVERAGE PRICE'AS MEASURE_NAME, avg(price) as avg_price from sales
UNION ALL
select count(distinct order_number) as total_orders from sales
UNION ALL
select count(distinct product_key) as total_products from product
UNION ALL
select count(customer_key) as total_customers from customers



6.MAGNITUTE Analysis - Compare the measure values by categories.
                     -it helps us understand the importance of different categories
                     - sum(measure) by dimension
                     - total_sales by country, total quantity by category, avg price by product, total orders by customer

EX find total customers by country

SELECT
    country,
    count(CUSTOMER_KEY) as total_customers
FROM customer
group by country
order by total_customers desc


ex find total customers by gender

SELECT
    gender,
    count(CUSTOMER_KEY) as total_customers
FROM customer
group by gender
order by total_customers desc

ex find total products by category

SELECT
    category,
    count(product_key) as total_products
FROM product
group by category
order by total_products desc


ex what is the average costs in each category?

SELECT 
    CATEGORY, 
    AVERAGE(COST) AS average_cost
from products
group by category
order by average_cost desc


ex what is the total revenue generated for each category

 SELECT
    p.category,
    s.sum(sales) as total_revenue
 from sales s
 LEFT JOIN products p
 ON product_key=product_key
 group by category
 order by total_revenue desc



ex find total revenue is generated by each customer

SELECT
    customer_key,
    first_name,
    last_name,
    sum(sales_amount) as total_revenue
FROM sales
Left join customers
on customer_key
group by 
    customer_key
    first_name,
    last_name,
order by total_revenue desc


ex what is the distribution of sold items across countries

SELECT
    country,
    sum(quantity) as total_sold_items
Left join customers
on customer_key
group by 
    country
order by total_sold_items desc



8. RANKING ANALYSIS - order the values of dimensions by measure
                    -top N performers | bottom N performers
                    -rank dimensions by an agregated measure
                    -Rank[dimension] by sum(measure)
                    -rank countryes by total sales, top 5 products by quantity

ex Which 5 products generate the highest revenue?

SELECT top 5
    p.product_name,
    sum(sales) as total_revenue
 from sales s
 LEFT JOIN products p
 ON product_key=product_key
 group by category
 order by total_revenue desc



 -with window functions:

SELECT 
    p.product_name,
    sum(sales) as total_revenue,
    row_number() over (order by sum(sales)) as rank products
 from sales s
 LEFT JOIN products p
 ON product_key=product_key
 group by category
 



ex what are the 5 worst- performing products in terms of sales?

SELECT top 5
    p.product_name,
    sum(sales) as total_revenue
 from sales s
 LEFT JOIN products p
 ON product_key=product_key
 group by category
 order by total_revenue asc

 ex Find top 10 customers who have generated the highest revenue and 3 customers with the fewest order placed

SELECT TOP 10
    customer_key,
    c.first_name,
    c.last_name,
    sum(sales_amount) as total_revenue
 from sales s
 LEFT JOIN customer c
 ON customer_key=customer_key
 group by categorycustomer_key,
    c.first_name,
    c.last_name
 order by total_revenue DESC
